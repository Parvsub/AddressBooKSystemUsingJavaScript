class ContactDetails{
    firstName;
    LastName;
    address;
    city;
    state;
    zip;
    phonenumber;
    email;

    //constructor
    constructor(firstName,LastName,address,city,state,zip,phonenumber,email){
        this.firstName = firstName;
        this.LastName= LastName;
        this.address= address;
        this.city= city;
        this.state = state;
        this.zip =zip;
        this.phonenumber= phonenumber;
        this.email= email;
    }

    get firstName(){
    return this.firstName;
   }
    set firstName(firstName){
    let firstNameRegex = RegExp('^[A-Z]{1}[a-z]{3,}');
    if(firstNameRegex.test(firstName))
    this.firstName = firstName;
    else throw 'First Name start with capital letter and have minimum 3 character';
   }
    get LastName(){
    return this.LastName;
   }
    set LastName(LastName){
        let LastNameRegex = RegExp('^[A-Z]{1}[a-z]{3,}');
        if(LastNameRegex.test(LastName))
        this.LastName =LastName;
        else throw 'Last Name start with capital letter and have minimum 3 character';
       }

   get address(){
    return this.address;
   }
    set address(address){
        let addressRegex = RegExp('^[A-Za-z]{4,}');
        if(addressRegex.test(address))
        this.address =address;
        else throw 'Address is Incorrect';
       }

   get city(){
    return this.city;
   }
   set city(city){
    let cityRegex = RegExp('^[A-Za-z]{4,}');
    if(cityRegex.test(city))
    this.city =city;
    else throw 'city is Incorrect';
   }
   
   get state(){
    return this.state;
   }
   set state(state){
    let stateRegex = RegExp('^[A-Za-z]{4,}');
    if(stateRegex.test(state))
    this.state =state;
    else throw 'state is Incorrect';
   }
    get zip(){
    return this.zip;
   }
   set zip(zip){
    let zipRegex = RegExp('^\d{5}(?:[-\s]\d{4})?');
    if(zipRegex.test(zip))
    this.zip =zip;
    else throw 'zip is Incorrect';
   }
   get phonenumber(){
    return this.phonenumber;
   }
   set phonenumber(phonenumber){
    let phonenumberRegex = RegExp('[19]{2}[0-9]{10}');
    if(phonenumberRegex.test(phonenumber))
    this.phonenumber =phonenumber;
    else throw 'phonenumber is Incorrect';
   }
   get email(){
    return this.email;
   }
   set email(email){
    let emailRegex = RegExp('^([A-Za-z0-9\_\.\-]+)@([a-z]+)\.([a-z]{5}(\.[a-z])?');
    if(emailRegex.test(email))
    this.email =email;
    else throw 'email is Incorrect';
   }

 
   toString(){
    return "\nfirstName:"+this.firstName+"\nLastName:"+this.LastName+"\naddress:"+this.address+"\ncity:"+this.city+"\nstate:"+this.state+"\nzip:"+this.zip+"\nphone:"+this.phonenumber+"\nemail:"+this.email;
   }
}

   let contactDetails = new ContactDetails("Praveen","Kumar","Banashankari","Bengaluru","Karnataka",560061,918765456765,'abc@gmail.com');
   console.log(contactDetails.toString());
   let contactDetailsnew = new ContactDetails("Mohan","Reddy","kathriguppe","Bengaluru south","Karnataka",560085,916785434560,'def@gmail.com');
   console.log(contactDetailsnew.toString());
   try{
    contactDetailsnew.LastName = "mohan";
    console.log(contactDetailsnew.toString());
   }catch(e){
    console.error(e);
   }
 
   let contactDetailsanother = new ContactDetails("Parvathi","Bodapati","gollapalli","Chittoor","AndhraPradesh",786543,917865456738,'ghj@gmail.com');
   let contactDetailarray = new Array();
   contactDetailarray.push(contactDetails)
   contactDetailarray.push(contactDetailsnew);
   contactDetailarray.push(contactDetailsanother);
   console.log("New contact:"+contactDetailarray)
//    contactDetailarray.forEach((Details) => console.log(Details.toString()));

   let object = contactDetailarray.find((Details)=>Details._firstName =='Praveen');
   if(object != undefined){
    contactDetailarray.pop();
    object.setfirstName('Rohith');
    object.setLastName('kumar');
    object.setAddress('uppal');
    object.setcity('Hyderabad');
    object.setstate('Telangana');
    object.setzip(234323);
    object.setphonenumber(919876566456);
    object.setemail('rhg@gmail.com');
    contactDetailarray.push(object);
    contactDetailarray.forEach((Details)=> console.log(Details.toString()));
   }else{
    console.log('Not found');
   }